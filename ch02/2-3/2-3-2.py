import sys
sys.path.append('..')
import numpy as np
from common.util import preprocess

text = 'You say goodbye and I say hello.'
corpus, word_to_id, id_to_word = preprocess(text)

C = np.array([
    [0, 1, 0, 0, 0, 0, 0],
    [1, 0, 1, 0, 1, 1, 0],
    [0, 1, 0, 1, 0, 0, 0],
    [0, 0, 1, 0, 1, 0, 0],
    [0, 1, 0, 1, 0, 0, 0],
    [0, 1, 0, 0, 0, 0, 1],
    [0, 0, 0, 0, 0, 1, 0],
], dtype=np.int32)
'''
- 넘파이는 64비트 부동소수점 수를 표준으로 사용하지만 신경망의 추론과 학습은
  32비트 부동소수점 수로도 문제없이(인식률을 거의 떨어뜨리는 일 없이) 수행할 수 있음
- 메모리 관점에서는 항상 32비트가 더 좋다고 말할 수 있음
- 버스 대역폭이 병목이 되는 경우에도 데이터 타입이 작은 게 유리함
- 계산 속도 측면에서도 32비트 부동소수점 수가 일반적으로 더 빠름
- 신경망 추론으로 한정하면, 16비트 부동소수점 수를 사용해도 인식률이 거의 떨어지지 않지만
  CPU와 GPU는 연산 자체를 32비트로 수행하기 때문에 16비트로 변환하더라도
  계산 자체는 32비트로 이루어져서 처리 속도 측면에서는 혜택이 없을 수도 있음
'''

